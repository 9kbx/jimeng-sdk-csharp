using System.Text.Json;

namespace JimengSDK.Requests;

public static class GetImageToImageV3ResultRequest
{
    /// <summary>
    /// 
    /// </summary>
    /// <param name="taskId">任务ID，此字段的取值为提交任务接口的返回</param>
    /// <param name="returnUrl">输出是否返回图片链接 （链接有效期为24小时）</param>
    /// <param name="addLogo">是否添加水印信息</param>
    /// <param name="position">水印的位置，取值如下：0-右下角/1-左下角/2-左上角/3-右上角/默认0</param>
    /// <param name="language">水印的语言，取值如下：0-中文（AI生成）/1-英文（Generated by AI）/默认0</param>
    /// <param name="opacity">水印的不透明度，取值范围0-1，1表示完全不透明，默认0.3</param>
    /// <param name="logoTextContent">明水印自定义内容</param>
    /// <returns></returns>
    public static byte[] ToRequestBodyBytes(string taskId, bool returnUrl = false, bool addLogo = false,
        int position = 0, int language = 0, float opacity = 0.3f, string logoTextContent = "")
    {
        var data = ToRequestBody(taskId, returnUrl, addLogo, position, language, opacity, logoTextContent);
        return JsonSerializer.SerializeToUtf8Bytes(data);
    }

    /// <summary>
    /// 
    /// </summary>
    /// <param name="taskId">任务ID，此字段的取值为提交任务接口的返回</param>
    /// <param name="returnUrl">输出是否返回图片链接 （链接有效期为24小时）</param>
    /// <param name="addLogo">是否添加水印信息</param>
    /// <param name="position">水印的位置，取值如下：0-右下角/1-左下角/2-左上角/3-右上角/默认0</param>
    /// <param name="language">水印的语言，取值如下：0-中文（AI生成）/1-英文（Generated by AI）/默认0</param>
    /// <param name="opacity">水印的不透明度，取值范围0-1，1表示完全不透明，默认0.3</param>
    /// <param name="logoTextContent">明水印自定义内容</param>
    /// <returns></returns>
    public static IDictionary<string, object> ToRequestBody(string taskId, bool returnUrl = false, bool addLogo = false,
        int position = 0, int language = 0, float opacity = 0.3f, string logoTextContent = "")
    {
        if (string.IsNullOrEmpty(taskId))
            throw new ArgumentNullException(nameof(taskId));

        var data = new Dictionary<string, object>
        {
            { "req_key", "jimeng_i2i_v30" },
            { "task_id", taskId }
        };

        var reqJsonData = new Dictionary<string, object>();

        if (addLogo && !string.IsNullOrEmpty(logoTextContent))
        {
            data.Add("logo_info",
                "{\"add_logo\":true,\"position\":" + position + ",\"language\":" + language + ",\"opacity\":" +
                opacity + ",\"logo_text_content\":\"" + logoTextContent + "\"}");
        }
        else if (returnUrl)
        {
            reqJsonData.Add("return_url", true);
        }

        if (reqJsonData.Any())
        {
            data.Add("req_json", JsonSerializer.Serialize(reqJsonData));
        }

        return data;
    }
}